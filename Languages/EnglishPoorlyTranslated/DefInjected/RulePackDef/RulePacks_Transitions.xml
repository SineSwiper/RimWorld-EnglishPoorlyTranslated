<?xml version="1.0" encoding="UTF-8"?>
<LanguageData>
  <!-- EN:
    <li>die(p=2)->die</li>
    <li>die->perish</li>
    <li>die->expire</li>
    <li>die(subject_flesh!=Mechanoid,p=0.5)->give in to [SUBJECT_possessive] wounds</li>
    <li>die(subject_flesh==Mechanoid,p=0.5)->shut down</li>
    <li>die(subject_flesh==Mechanoid,p=0.5)->stop functioning</li>
    <li>died(p=2)->died</li>
    <li>died->perished</li>
    <li>died(subject_flesh!=Mechanoid)->expired</li>
    <li>died(subject_flesh==Mechanoid)->shut down</li>
    <li>died(subject_flesh==Mechanoid)->stopped functioning</li>
  -->
  <Transition_Died.rulePack.rulesStrings>
    <li>die(p=2)->dead</li>
    <li>die->die</li>
    <li>die->of death</li>
    <li>die(subject_flesh!=Mechanoid,p=0.5)->He died due to damage [SUBJECT_possessive]</li>
    <li>die(subject_flesh==Mechanoid,p=0.5)->murder</li>
    <li>die(subject_flesh==Mechanoid,p=0.5)->stops working</li>
    <li>died(p=2)->dead and</li>
    <li>died->Killed by wounded</li>
    <li>died(subject_flesh!=Mechanoid)->miscellaneous</li>
    <li>died(subject_flesh==Mechanoid)->power switch</li>
    <li>died(subject_flesh==Mechanoid)->ceased</li>
  </Transition_Died.rulePack.rulesStrings>
  <!-- EN:
    <li>die(p=3)->explode [flavor]</li>
    <li>die(p=3)->explode [flavorsuffix]</li>
    <li>die->detonate [flavor]</li>
    <li>die->detonate [flavorsuffix]</li>
    <li>die->burst [flavor]</li>
    <li>die->burst [flavorsuffix]</li>
    <li>died(p=3)->exploded [flavor]</li>
    <li>died->detonated [flavor]</li>
    <li>died->burst [flavor]</li>
    <li>flavor(p=0.2)->in a chemical [fireball]</li>
    <li>flavor->in a [Color] [fireball]</li>
    <li>flavor->in a [AdjectiveLarge] [fireball]</li>
    <li>flavor(p=4)->in a [fireball]</li>
    <li>flavor(p=4)-></li>
    <li>flavorsuffix->, scattering [pieces] [everywhere]</li>
    <li>flavorsuffix(subject_flesh!=Mechanoid,p=2)->, scattering [Gore] [everywhere]</li>
    <li>flavorsuffix(subject_flesh!=Mechanoid)->, leaving a small pile of [Gore]</li>
    <li>flavorsuffix->, leaving a small crater</li>
    <li>flavorsuffix(p=4)-></li>
    <li>fireball(p=3)->fireball</li>
    <li>fireball->flameball</li>
    <li>fireball->shockwave</li>
    <li>fireball->conflagration</li>
    <li>pieces->pieces</li>
    <li>pieces->fragments</li>
    <li>everywhere->everywhere</li>
    <li>everywhere->far and wide</li>
  -->
  <Transition_DiedExplosive.rulePack.rulesStrings>
    <li>die(p=3)->fall [flavor]</li>
    <li>die(p=3)->explodieren[flavorsuffix]</li>
    <li>die->[flavor] fenedewochi</li>
    <li>die->explodieren[flavorsuffix]</li>
    <li>die->[flavor]</li>
    <li>die->zerbersten[flavorsuffix]</li>
    <li>died(p=3)->[flavor] broken here</li>
    <li>died->explosion on [flavor]</li>
    <li>died->[flavor] explosion</li>
    <li>flavor(p=0.2)->chemical [fireball]</li>
    <li>flavor->[Color]en [fireball]</li>
    <li>flavor->[fireball] [AdjectiveLarge]</li>
    <li>flavor(p=4)->[fireball]</li>
    <li>flavor(p=4)-></li>
    <li>flavorsuffix->and distribution [everywhere] [pieces]</li>
    <li>flavorsuffix(subject_flesh!=Mechanoid,p=2)->and distribution [everywhere] [Gore]</li>
    <li>flavorsuffix(subject_flesh!=Mechanoid)->Only a small part remains [Gore]</li>
    <li>flavorsuffix->Small open left</li>
    <li>flavorsuffix(p=4)-></li>
    <li>fireball(p=3)->Torched</li>
    <li>fireball->Fire</li>
    <li>fireball->Lightning</li>
    <li>fireball->Grom</li>
    <li>pieces->Part</li>
    <li>pieces->Accessories</li>
    <li>everywhere->everywhere</li>
    <li>everywhere->close far</li>
  </Transition_DiedExplosive.rulePack.rulesStrings>
  <!-- EN:
    <li>r_logentry(p=1.5)->[CULPRITHEDIFF_labelNoun] caused [SUBJECT_definite] to [die].</li>
    <li>r_logentry(p=1.5)->[CULPRITHEDIFF_labelNounPretty] caused [SUBJECT_definite] to [die].</li>
    <li>r_logentry->[SUBJECT_definite] [died] [duetoa] [CULPRITHEDIFF_labelNoun] [flavorsuffix].</li>
    <li>r_logentry->[SUBJECT_definite] [died] [duetoa] [CULPRITHEDIFF_labelNounPretty] [flavorsuffix].</li>
    <li>r_logentry->[SUBJECT_definite] [died].</li>
    <li>r_logentry->[SUBJECT_definite] [died] [flavorsuffix].</li>
  -->
  <Transition_DiedInclude.rulePack.rulesStrings>
    <li>r_logentry(p=1.5)->[CULPRITHEDIFF_labelNoun] do [SUBJECT_label] [die].</li>
    <li>r_logentry(p=1.5)->Loading [CULPRITHEDIFF_labelNounPretty] [SUBJECT_label] [die].</li>
    <li>r_logentry->[SUBJECT_label] [died] [duetoa] [CULPRITHEDIFF_labelNoun] [flavorsuffix].</li>
    <li>r_logentry->[SUBJECT_label] [died] [duetoa] [CULPRITHEDIFF_labelNounPretty] [flavorsuffix].</li>
    <li>r_logentry->[SUBJECT_label] [died].</li>
    <li>r_logentry->[SUBJECT_label] [died][flavorsuffix].</li>
  </Transition_DiedInclude.rulePack.rulesStrings>
  <!-- EN:
    <li>r_logentry->[CULPRITHEDIFF_labelNoun] caused [SUBJECT_definite] to [collapsemeta].</li>
    <li>r_logentry->[CULPRITHEDIFF_labelNounPretty] caused [SUBJECT_definite] to [collapsemeta].</li>
    <li>r_logentry->[SUBJECT_definite] [collapsedmeta] [duetoa] [CULPRITHEDIFF_labelNoun].</li>
    <li>r_logentry->[SUBJECT_definite] [collapsedmeta] [duetoa] [CULPRITHEDIFF_labelNounPretty].</li>
    <li>r_logentry(p=0.1)->[SUBJECT_definite] [collapsedmeta].</li>
    <li>collapse->collapse</li>
    <li>collapse->crumple</li>
    <li>collapse->drop</li>
    <li>collapse(subject_flesh!=Mechanoid)->faint</li>
    <li>collapse(subject_flesh==Mechanoid)->crash</li>
    <li>collapse(subject_flesh==Mechanoid)->bootloop</li>
    <li>collapse(subject_flesh==Mechanoid)->hardlock</li>
    <li>collapsed->collapsed</li>
    <li>collapsed->crumpled</li>
    <li>collapsed->dropped</li>
    <li>collapsed(subject_flesh!=Mechanoid)->fainted</li>
    <li>collapsed(subject_flesh==Mechanoid)->crashed</li>
    <li>collapsed(subject_flesh==Mechanoid)->bootlooped</li>
    <li>collapsed(subject_flesh==Mechanoid)->hardlocked</li>
    <li>helplessly->helplessly</li>
    <li>helplessly(subject_flesh!=Mechanoid)->unconscious</li>
    <li>helplessly(subject_flesh!=Mechanoid)->in exhaustion</li>
    <li>helplessly(subject_flesh!=Mechanoid)->weakly</li>
    <li>helplessly(subject_flesh!=Mechanoid)->feebly</li>
    <li>helplessly(subject_flesh==Mechanoid)->uncontrollably</li>
    <li>collapsemeta->[collapse]</li>
    <li>collapsemeta(p=0.5)->[collapse] [helplessly]</li>
    <li>collapsedmeta->[collapsed]</li>
    <li>collapsedmeta(p=0.5)->[collapsed] [helplessly]</li>
  -->
  <Transition_Downed.rulePack.rulesStrings>
    <li>r_logentry->[CULPRITHEDIFF_labelNoun] [SUBJECT_label] [collapsemeta] left.</li>
    <li>r_logentry->[CULPRITHEDIFF_labelNounPretty] [SUBJECT_label] [collapsemeta] left.</li>
    <li>r_logentry->[SUBJECT_label] [collapsedmeta] [duetoa] [CULPRITHEDIFF_labelNoun].</li>
    <li>r_logentry->[SUBJECT_label] [collapsedmeta] [duetoa] [CULPRITHEDIFF_labelNounPretty].</li>
    <li>r_logentry(p=0.1)->[SUBJECT_label] [collapsedmeta].</li>
    <li>collapse->fall</li>
    <li>collapse->read</li>
    <li>collapse->the fall</li>
    <li>collapse(subject_flesh!=Mechanoid)->lose consciousness</li>
    <li>collapse(subject_flesh==Mechanoid)->System problems</li>
    <li>collapse(subject_flesh==Mechanoid)->The songs on the circuit resume</li>
    <li>collapse(subject_flesh==Mechanoid)->error</li>
    <li>collapsed->breakdown hi</li>
    <li>collapsed->crash</li>
    <li>collapsed->fall</li>
    <li>collapsed(subject_flesh!=Mechanoid)->dizzy</li>
    <li>collapsed(subject_flesh==Mechanoid)->The system is outdated</li>
    <li>collapsed(subject_flesh==Mechanoid)->Put in your resume loop</li>
    <li>collapsed(subject_flesh==Mechanoid)->The success of a memory error</li>
    <li>helplessly->useless</li>
    <li>helplessly(subject_flesh!=Mechanoid)->leaves</li>
    <li>helplessly(subject_flesh!=Mechanoid)->weary</li>
    <li>helplessly(subject_flesh!=Mechanoid)->low</li>
    <li>helplessly(subject_flesh!=Mechanoid)->helpless</li>
    <li>helplessly(subject_flesh==Mechanoid)->marked by</li>
    <li>collapsemeta->[collapse]</li>
    <li>collapsemeta(p=0.5)->[helplessly] [collapse]</li>
    <li>collapsedmeta->he [collapsed]</li>
    <li>collapsedmeta(p=0.5)->this is [helplessly] [collapsed]</li>
  </Transition_Downed.rulePack.rulesStrings>
  <!-- EN:
    <li>duetoa->due to</li>
    <li>duetoa(p=0.5)->because of</li>
    <li>duetoa(p=0.5)->thanks to</li>
  -->
  <Transition_Include.rulePack.rulesStrings>
    <li>duetoa->why</li>
    <li>duetoa(p=0.5)->because</li>
    <li>duetoa(p=0.5)->reason</li>
  </Transition_Include.rulePack.rulesStrings>
</LanguageData>
